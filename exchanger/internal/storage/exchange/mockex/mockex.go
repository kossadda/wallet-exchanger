// Code generated by MockGen. DO NOT EDIT.
// Source: internal/storage/exchange/storage.go

// Package mockex is a generated GoMock package.
package mockex

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	exchange_grpc "github.com/kossadda/wallet-exchanger/share/gen/exchange"
)

// MockMainAPI is a mock of MainAPI interface.
type MockMainAPI struct {
	ctrl     *gomock.Controller
	recorder *MockMainAPIMockRecorder
}

// MockMainAPIMockRecorder is the mock recorder for MockMainAPI.
type MockMainAPIMockRecorder struct {
	mock *MockMainAPI
}

// NewMockMainAPI creates a new mock instance.
func NewMockMainAPI(ctrl *gomock.Controller) *MockMainAPI {
	mock := &MockMainAPI{ctrl: ctrl}
	mock.recorder = &MockMainAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMainAPI) EXPECT() *MockMainAPIMockRecorder {
	return m.recorder
}

// GetExchangeRates mocks base method.
func (m *MockMainAPI) GetExchangeRates(arg0 context.Context) (*exchange_grpc.ExchangeRatesResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetExchangeRates", arg0)
	ret0, _ := ret[0].(*exchange_grpc.ExchangeRatesResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetExchangeRates indicates an expected call of GetExchangeRates.
func (mr *MockMainAPIMockRecorder) GetExchangeRates(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetExchangeRates", reflect.TypeOf((*MockMainAPI)(nil).GetExchangeRates), arg0)
}
